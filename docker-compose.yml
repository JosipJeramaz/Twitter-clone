version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: twitter_clone_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: twitter_clone
      MYSQL_USER: twitter_user
      MYSQL_PASSWORD: twitter_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./database/add_oauth_support.sql:/docker-entrypoint-initdb.d/2-add_oauth_support.sql
      - ./database/update_schema.sql:/docker-entrypoint-initdb.d/3-update_schema.sql
      - ./database/add_new_post_notification_type.sql:/docker-entrypoint-initdb.d/4-add_new_post_notification_type.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/5-seed.sql
    networks:
      - twitter_network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: twitter_clone_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: twitter_user
      DB_PASSWORD: twitter_password
      DB_NAME: twitter_clone
      JWT_SECRET: your_super_secret_jwt_key_here
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mysql
    networks:
      - twitter_network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: twitter_clone_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_WS_URL: ws://localhost:5000
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - twitter_network

volumes:
  mysql_data:

networks:
  twitter_network:
    driver: bridge